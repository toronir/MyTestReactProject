{"version":3,"sources":["Redux/Dialogs-reducer.js","components/Profile/Profile.module.css","assets/images/d1.gif","components/common/Preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Api/api.js","Redux/Profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","Redux/Profile-selectors.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/Auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/utilits/validators/object-helper.js","Redux/Users-reducer.js","components/Users/Users.js","Redux/Users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/Login/LoginForm.jsx","Redux/App-reducer.js","Redux/Sidebar-reducer.js","Redux/Redux-store.js","App.js","index.js","components/common/FormsControls/FormsControl.js","components/utilits/validators/validators.js","components/hoc/withAuthRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControl.module.css","components/Header/Header.module.css","components/Users/Users.module.css"],"names":["initialState","messages","id","message","dialogs","name","sendMessageActionCreator","newMessageText","type","dialogsReducer","state","action","filter","p","messageId","text","module","exports","Boolean","window","location","hostname","match","Preloader","props","className","style","preloaderStyle","src","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","photos","large","styles","userPhoto","alt","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","getProfile","userId","console","warn","profileAPI","getUnfollow","post","getFollow","delete","authAPI","email","password","rememberMe","getStatus","put","ADD_POST","posts","likesCount","profileReducer","newPost","newPostText","postId","Post","porps","MaxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","log","postsElements","map","myposts","postsBlock","values","addPost","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","content","getIsAuth","auth","isAuth","getUserId","ProfileContainer","this","params","authorizedUserId","history","push","getUserProfile","getUserStatus","React","Component","compose","a","resultCode","withRouter","withAuthRedirect","Header","header","loginBlock","login","onClick","logout","to","setAuthUserData","getAuthUserData","authReducer","HeaderContainer","Navbar","navbar","nav","item","activeClassName","activeLink","updateObjectInArray","items","itemId","objectPropName","newObject","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","Users","pagesCount","Math","ceil","pages","isNumberOfPagesPositive","isNumberOfPagesNotMax","i","selectedPage","onPageChanged","u","key","small","disabled","some","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getUser","bind","totalCount","ReduxLoginForm","Input","error","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","sidebarPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","AppContainer","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","maxLength"],"mappings":"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","file":"static/js/main.2c8c98ef.chunk.js","sourcesContent":["const SEND_MESSAGE = \"dialogs/SEND_MESSAGE\";\r\nconst DELETE_MESSAGE = \"dialogs/DELETE_MESSAGE\";\r\n\r\n\r\nlet initialState = {\r\n  messages: [\r\n    { id: 1, message: \"Message\" },\r\n    { id: 2, message: \"message with mistake\" },\r\n    { id: 3, message: \"Fake news\" },\r\n  ],\r\n  dialogs: [\r\n    { id: 1, name: \"Viachaslau\" },\r\n    { id: 2, name: \"Olaf\" },\r\n    { id: 3, name: \"Eserhin\" },\r\n  ],\r\n\r\n};\r\nlet dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DELETE_MESSAGE:\r\n      return {\r\n        ...state, messages: state.messages.filter(p => p.id != action.messageId)\r\n      };\r\n    case SEND_MESSAGE:\r\n      let text = action.newMessageText;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: text }],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const sendMessageActionCreator = (newMessageText) => ({type: SEND_MESSAGE,newMessageText})\r\nexport const deleteMessageActionCreator = (messageId) => ({type: DELETE_MESSAGE,messageId})\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1IZDi\"};","module.exports = __webpack_public_path__ + \"static/media/d1.48b6bce4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderStyle\":\"Preloader_preloaderStyle__1jikD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__MZ6_t\",\"userPhoto\":\"ProfileInfo_userPhoto__Mk7vZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__2yF9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1bynL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1ePFH\",\"item\":\"Navbar_item__3k2DO\",\"activeLink\":\"Navbar_activeLink__21aHx\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/d1.gif\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={style.preloaderStyle}>\r\n      <img src={preloader} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect (()=>{\r\n       setStatus(props.status)\r\n   }, [props.status]);\r\n\r\n   const activateMode = () =>{\r\n       setEditMode(true);\r\n   };\r\n   const deactivateMode = () =>{\r\n       setEditMode(false);\r\n       props.updateStatus(status);\r\n   };\r\n   const onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n   };\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode} >{props.status}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst  ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>;\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/en/7/78/Team_WE_logo.png\"/>\r\n            </div>\r\n            <div>\r\n                <img src={\r\n                    props.profile.photos.large != null\r\n                        ? props.profile.photos.large\r\n                        : \"https://image.flaticon.com/icons/png/512/149/149071.png\"}\r\n                     className={styles.userPhoto}\r\n                     alt=\"\"\r\n                />\r\n\r\n            </div>\r\n            <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status} profile={props.profile}/>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"04e4869e-d4f4-48fe-b561-00f1e88e959f\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n     getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI object\")\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n    getUnfollow(id = 1) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getFollow(id = 1) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`)\r\n    },\r\n    login(email,password,rememberMe = false){\r\n        return instance.post(`auth/login`,{email,password,rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status:status})\r\n    },\r\n}\r\n\r\n","import {profileAPI, userAPI} from \"../components/Api/api\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\";\r\nconst DELETE_POST = \"profile/DELETE_POST\";\r\nconst RESET_PROFILE = \"profile/RESET_PROFILE\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, message: \"post1\", likesCount: 12},\r\n        {id: 1, message: \"post2\", likesCount: 22},\r\n        {id: 2, message: \"post3\", likesCount: 14},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, post: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case RESET_PROFILE: {\r\n            return {...state, profile: null }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    };\r\n};\r\nexport const deletePostActionCreator = (postId) => {\r\n    return {\r\n        type: DELETE_POST, postId\r\n    };\r\n};\r\nexport const resetProfileAction = () => {\r\n    return {\r\n        type: RESET_PROFILE\r\n    };\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    };\r\n};\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(response.data));\r\n    }\r\n\r\n}\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport post from \"./Post.module.css\";\r\n\r\nconst Post = (porps) => {\r\n  return (\r\n    <div>\r\n      <div>{porps.message}</div>\r\n      <div>likes {porps.likesCount}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport myposts from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport {maxLength30, maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\nconst MaxLength10 = maxLengthCreator(10)\r\nconst MyPosts = (props) => {\r\nconsole.log(\"RENDER\")\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  let postsElements = props.posts.map((post) => (\r\n    <Post message={post.message} likesCount={post.likesCount} />\r\n  ));\r\n  return (\r\n    <div className={myposts.postsBlock}>\r\n      My Posts\r\n      <div>\r\n        <div>\r\n          <AddPostFormRedux onSubmit={addNewPost}/>\r\n        </div>\r\n      </div>\r\n      <div className={myposts.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter your massage\" validate={[required,MaxLength10]}/>\r\n        </div>\r\n        <div>\r\n          <button>Send</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm ({form:\"PostAddMasageForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n} from \"../../../Redux/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport profile from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst   Profile = (props) => {\r\n\r\n  return (\r\n    <div className={profile.content}>\r\n      <ProfileInfo profile={props.profile} updateStatus={props.updateStatus} status={props.status}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export const getProfile  = (state) =>{\r\n    return state.profilePage.profile;\r\n}\r\nexport const getIsAuth  = (state) =>{\r\n    return state.auth.isAuth;\r\n}\r\nexport const getStatus  = (state) =>{\r\n    return state.profilePage.status;\r\n}\r\nexport const getUserId  = (state) =>{\r\n    return state.auth.userId;\r\n}\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserStatus, getUserProfile, updateStatus, } from \"../../Redux/Profile-reducer\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getIsAuth, getProfile, getStatus, getUserId} from \"../../Redux/Profile-selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: getProfile(state),\r\n  isAuth: getIsAuth(state),\r\n  status: getStatus(state),\r\n  authorizedUserId: getUserId(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus  }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","import React from \"react\";\r\nimport header from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={header.header}>\r\n      <img src=\"https://www.sdsd.com/wp-content/uploads/2020/01/fi.png\" />\r\n      <div className={header.loginBlock}>\r\n        {props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n            : <NavLink to={\"/login\"}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../components/Api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"auth/SET_AUTH_USER_DATA\";\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {userId, email, login, isAuth},\r\n});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n        console.log(initialState.id)\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe,)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n\r\n}\r\nexport const logout = (e) => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport {logout} from \"../../Redux/Auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport navbar from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={navbar.nav}>\r\n      <div className={navbar.item}>\r\n        <NavLink to=\"/profile\" activeClassName={navbar.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={navbar.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={navbar.activeLink}>\r\n          Dialogs\r\n        </NavLink>\r\n      </div>\r\n      <div className={navbar.item}>\r\n        <NavLink to=\"/vk.com\" activeClassName={navbar.activeLink}>\r\n          nah\r\n        </NavLink>\r\n      </div>\r\n      <div className={navbar.item}>\r\n        <NavLink to=\"/users\" activeClassName={navbar.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const updateObjectInArray = (items, itemId, objectPropName, newObject) => {\r\n    items.users.map((e) => {\r\n        if (e[objectPropName] === itemId) {\r\n            return {...e, ...newObject};\r\n        }\r\n        return e;\r\n    })\r\n}\r\n\r\n","import {userAPI} from \"../components/Api/api\";\r\nimport {updateObjectInArray} from \"../components/utilits/validators/object-helper\";\r\n\r\nconst FOLLOW = \"user/FOLLOW\";\r\nconst UNFOLLOW = \"user/UNFOLLOW\";\r\nconst SET_USERS = \"user/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"user/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"user/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"user/TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"user/FOLLOWING_IN_PROGRESS\";\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 30,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\"id\",{followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users, action.userId,\"id\",{followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: FOLLOWING_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const getUser = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        userAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setUsersTotalCount(data.totalCount));\r\n            });\r\n    }\r\n};\r\nconst followUnfollowFlow = async (dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true,userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false,userId));\r\n}\r\nexport const getUnfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,userAPI.getUnfollow.bind(userAPI),followSuccess)\r\n    }\r\n};\r\nexport const getFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,userAPI.getFollow.bind(userAPI),unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    let isNumberOfPagesPositive = props.currentPage - 5;\r\n    let isNumberOfPagesNotMax = props.currentPage + 5;\r\n    if ((props.currentPage + 5) > pagesCount) {\r\n        isNumberOfPagesNotMax = pagesCount\r\n    }\r\n    if ((props.currentPage - 5) < 1) {\r\n        isNumberOfPagesPositive = 1\r\n    }\r\n    for (let i = isNumberOfPagesPositive; i <= isNumberOfPagesNotMax; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map((p) => {\r\n                    return (\r\n                        <span\r\n                            className={props.currentPage === p && styles.selectedPage}\r\n                            onClick={() => {\r\n                                props.onPageChanged(p);\r\n\r\n                            }}\r\n                        >\r\n              {p}\r\n            </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            {props.users.map((u) => (\r\n                <div key={u.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={`/profile/${u.id}`}>\r\n                <img\r\n                    src={\r\n                        u.photos.small != null\r\n                            ? u.photos.small\r\n                            : \"https://yt3.ggpht.com/a/AATXAJw_UO-dG3sgFQWu5ZQGMJqHteGHDstG3ushN3iJDg=s100-c-k-c0xffffffff-no-rj-mo\"\r\n                    }\r\n                    className={styles.userPhoto}\r\n                    alt=\"\"\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n\r\n              {u.followed\r\n                  ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                      props.getFollow(u.id);\r\n                  }}>Unfollow</button>\r\n                  : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                      props.getUnfollow(u.id);\r\n                  }}>Follow</button>}\r\n            </div>\r\n          </span>\r\n                    <span>\r\n            <span>\r\n              <div>{u.name}</div>\r\n              <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.city\"}</div>\r\n              <div>{\"u.location.photos\"}</div>\r\n            </span>\r\n          </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","export const getUsers  = (state) =>{\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize  = (state) =>{\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount  = (state) =>{\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage  = (state) =>{\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching  = (state) =>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress  = (state) =>{\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const getIsAuth  = (state) =>{\r\n    return state.auth.isAuth;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrentPage,toggleFollowingProgress, getUser, getFollow, getUnfollow} from \"../../Redux/Users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/Users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {debugger\r\n\r\n        this.props.getUser(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {debugger\r\n        this.props.getUser(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    getUsers={this.props.getUsers}\r\n                    getFollow={this.props.getFollow}\r\n                    getUnfollow={this.props.getUnfollow}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    isFetching={this.props.isFetching}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};*/\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getFollow,\r\n        getUnfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUser,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React from \"react\";\r\nimport { reduxForm } from 'redux-form'\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/Auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n        console.log(formData)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={`/profile`}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n\r\n})\r\nexport default connect (mapStateToProps ,{login,logout})(Login);","import {Field} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControl\";\r\nimport {required} from \"../utilits/validators/validators\";\r\nimport React from \"react\";\r\nimport style from \"./Login.module.css\"\r\n\r\nexport const LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={required}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={required}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remeber me\r\n            </div>\r\n            { props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","\r\nimport {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\";\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\nlet appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(setInitializedSuccess());\r\n    })\r\n\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = ( state = initialState, action)=>{\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, createStore, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./Profile-reducer\";\r\nimport dialogsReducer from \"./Dialogs-reducer\";\r\nimport sidebarReducer from \"./Sidebar-reducer\";\r\nimport usersReducer from \"./Users-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./App-reducer\";\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebarPage: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = { store };\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/App-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/Redux-store\";\nimport {Provider} from \"react-redux\";\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className=\"app-wraper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wraper-content\">\n                    <Route path=\"/dialogs\" render={() => {\n                        return <React.Suspense fallback={<div>Loading...</div>}>\n                            <DialogsContainer/>\n                        </React.Suspense>\n                    }}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}),\n)(App);\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default MainApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport MainApp from \"./App\";\n\n\nReactDOM.render(<MainApp/>,document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\";\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}> <input {...input} {...restProps}/></FormControl>\r\n}","export const required  = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n\r\n}\r\nexport  const maxLength30 = value => {\r\n    if (value && value.length >30) return \"Max length\"\r\n    return \"Field is required\"\r\n}\r\nexport  const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length >maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n                return <Component {...this.props}/>;\r\n        }\r\n    }\r\n    return  RedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1PWcH\",\"posts\":\"MyPosts_posts__gHm6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1YhbO\",\"error\":\"FormsControl_error__sfBlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lAKd\",\"loginBlock\":\"Header_loginBlock__1jkTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2gA68\",\"selectedPage\":\"Users_selectedPage__1lqRZ\"};"],"sourceRoot":""}